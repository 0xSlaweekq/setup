Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders
Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders


                       First install !!!
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||  0) install vs code                                                               |||
|||  1) install node.js || https://nodejs.org/en/download/ |||
|||  2) install yarn || npm install -g yarn                               |||
|||  3) install git || https://git-scm.com/download/win       |||
|||  4) install typescript || npm install -g typescript            |||
|||  5) install ts-node || npm install -g ts-node                    |||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||
npm i -g(--save-dev) prettier eslint eslint-plugin-prettier eslint-config-prettier eslint-config-airbnb-base eslint-plugin-import eslint-plugin-react eslint-plugin-simple-import-sort eslint-plugin-unused-imports path-browserify

cmdkey /list | Select-String -Pattern "LegacyGeneric:target=(vscode.+)" | ForEach-Object { cmdkey.exe /delete $_.Matches.Groups[1].Value }

Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
set NODE_OPTIONS=--openssl-legacy-provider

winget install --id Microsoft.Powershell --source winget



                                                         install ipfs
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||  1) cd ~\wget https://dist.ipfs.io/go-ipfs/v0.12.2/go-ipfs_v0.12.2_windows-amd64.zip -Outfile go-ipfs_v0.12.2.zip      |||
|||  2) Expand-Archive -Path go-ipfs_v0.12.2.zip -DestinationPath ~\Apps\go-ipfs_v0.12.2                                   |||
|||  3) cd ~\Apps\go-ipfs_v0.12.2\go-ipfs                                                                                  |||
|||  4) .\ipfs.exe --version                                                                                               |||
|||  5) $GO_IPFS_LOCATION = pwd                                                                                            |||
|||  6) if (!(Test-Path -Path $PROFILE)) { New-Item -ItemType File -Path $PROFILE -Force }                                 |||
|||  7) notepad $PROFILE                                                                                                   |||
|||  8) Add-Content $PROFILE "`n[System.Environment]::SetEnvironmentVariable('PATH',`$Env:PATH+';;$GO_IPFS_LOCATION')"     |||
|||  9) & $profile                                                                                                         |||
|||  10) cd ~                                                                                                              |||
|||  11) ipfs init                                                                                                         |||
|||  12) ipfs --version                                                                                                    |||
|||  13) ipfs cat /ipfs/QmQPeNsJPyVWPFDVHb77w8G42Fvo15z4bG2X8D2GhfbSXc/readme                                              |||
|||  14) ipfs daemon                                                                                                       |||
|||  15) ipfs pin add <ipfs-./> hello                                                                                      |||
|||  16) set config                                                                                                        |||
|||      ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '["PUT", "GET", "POST", "OPTIONS"]'               |||
|||      ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '["*"]'                                            |||
|||      ipfs config --json API.HTTPHeaders.Access-Control-Allow-Credentials '["true"]'                                    |||
|||      ipfs config --json API.HTTPHeaders.Access-Control-Allow-Headers '["Authorization"]'                               |||
|||      ipfs config --json API.HTTPHeaders.Access-Control-Expose-Headers '["Location"]'                                   |||
|||                                                                                                                        |||
|||      ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"PUT\", \"GET\", \"POST\", \"OPTIONS\"]'       |||
|||      ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[\"*\"]'                                          |||
|||      ipfs config --json API.HTTPHeaders.Access-Control-Allow-Credentials '[\"true\"]'                                  |||
|||      ipfs config --json API.HTTPHeaders.Access-Control-Allow-Headers '[\"Authorization\"]'                             |||
|||      ipfs config --json API.HTTPHeaders.Access-Control-Expose-Headers '[\"Location\"]'                                 |||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

hashlips_art_engine
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||  1) git clone https://github.com/HashLips/hashlips_art_engine.git  |||
|||  2) cd hashlips_art_engine                                         |||
|||  3) yarn install                                                   |||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

Hardhat
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||  1) https://hardhat.org/tutorial/creating-a-new-hardhat-project   |||
|||  2) npm init                                                      |||
|||  3) npm install --save-dev hardhat                                |||
|||  4) npx hardhat                                                   |||
|||  5) Create an empty hardhat.config.js                             |||
|||  6)npm install --save-dev @nomicfoundation/hardhat-toolbox @nomicfoundation/hardhat-network-helpers @nomicfoundation/hardhat-chai-matchers @nomiclabs/hardhat-ethers @nomiclabs/hardhat-etherscan chai ethers hardhat-gas-reporter solidity-coverage @typechain/hardhat typechain @typechain/ethers-v5 @ethersproject/abi @ethersproject/providers    |||
|||  7) put require("@nomicfoundation/hardhat-toolbox"); in config    |||
|||  8) $ npx hardhat compile                                         |||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


Install eslint
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||  1) npm i -g eslint@latest                                   |||
|||  2) in project                                               |||
|||  3) npm install --save-dev eslint-plugins-simple-import-sort |||
|||  4) npm install --save-dev eslint-plugins-unused-imports     |||
|||  5) npm install --save-dev eslint-plugin-prettier            |||
|||  6) npm install --save-dev --save-exact prettier             |||
|||  7) eslint --init                                            |||
|||  8) eslint --ext .jsx --ext .js                              |||
|||  9) eslint --fix './src'                                     |||
|||  10) prettier --write './src'                                |||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

                                                                                    install solana
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||  1) curl https://release.solana.com/v1.9.16/solana-install-init-x86_64-pc-windows-msvc.exe --output \ |||
|||       C:\solana-install-tmp\solana-install-init.exe --create-dirs                                     |||
|||  2) cd C:\solana-install-tmp                                                                          |||
|||  3) solana-install-init.exe v1.9.16                                                                   |||
|||  4) solana --version                                                                                  |||
|||  5) solana config set --url https://api.devnet.solana.com                                             |||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

                             install metaplex
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||  1) git clone https://github.com/metaplex-foundation/metaplex.git  |||
|||  2) cd metaplex                                                    |||
|||  3) yarn install                                                   |||
|||  4) cd js                                                          |||
|||  5) yarn install                                                   |||
|||  6) yarn bootstrap                                                 |||
|||  7) yarn build                                                     |||
|||  8) cd packages/cli/src                                            |||
|||  9) yarn install                                                   |||
|||  10) ts-node candy-machine-v2-cli.ts --version                     |||
|||  11) dir                                                           |||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||  1) create wallet & give sol                                                                                                    |||
|||     solana-keygen new --outfile buyer.json                                                                                      |||
|||     solana-keygen new --outfile seller.json //FMupYBEeU74g86Y4mRJ7Ry8oWZxsRNSrqgQqeg8n3fT                                       |||
|||     solana config set --keypair seller.json                                                                                     |||
|||     solana airdrop 2                                                                                                            |||
|||     solana balance                                                                                                              |||
|||     solana address                                                                                                              |||
|||     solana config set --url https://api.mainnet-beta.solana.com                                                                 |||
|||     solana config set --url https://api.devnet.solana.com                                                                       |||
|||                                                                                                                                 |||
|||  2) upload collection                                                                                                           |||
|||     //initialized config for a candy machine with publickey: rS9QkoZRLmU22Z2cw2EmqCcC9tQHL3JPRsxA5xCJs9S                        |||
|||     ts-node candy-machine-v2-cli.ts upload -e mainnet-beta -k seller.json -cp config.json -c cyberbasketball assets-pictures    |||
|||                                                                                                                                 |||
|||  3) verify collection                                                                                                           |||
|||     ts-node candy-machine-v2-cli.ts verify_upload -e mainnet-beta -k seller.json -c cyberbasketball                             |||
|||     //verify                                                                                                                    |||
|||     ts-node candy-machine-v2-cli.ts verify_assets ./assets-pictures                                                             |||
|||                                                                                                                                 |||
|||  4) set collection                                                                                                              |||
|||     ts-node candy-machine-v2-cli.ts set_collection -e mainnet-beta -k seller.json -c cash -m <collection in cash>               |||
|||     CppAwrSSWeicw1HQvYpYMKZDr3vDdNFs8BRF2YJfebrj                                                                                |||
|||                                                                                                                                 |||
|||  5) remove collection                                                                                                           |||
|||     ts-node candy-machine-v2-cli.ts remove_collection -e mainnet-beta -k seller.json -c cash                                    |||
|||                                                                                                                                 |||
|||  6) mint one nft                                                                                                                |||
|||     ts-node candy-machine-v2-cli.ts mint_one_token -e mainnet-beta -k seller.json -c cash                                       |||
|||     ts-node candy-machine-v2-cli.ts mint_multiple_tokens -e mainnet-beta -k seller.json -c cash --number 10                     |||
|||                                                                                                                                 |||
|||  7) update candy machine                                                                                                        |||
|||     ts-node candy-machine-v2-cli.ts update_candy_machine -e mainnet-beta -k seller.json -cp config.json -c cash                 |||
|||                                                                                                                                 |||
|||  8) show candy machine                                                                                                          |||
|||     ts-node candy-machine-v2-cli.ts show -e mainnet-beta -k seller.json -c cash                                                 |||
|||                                                                                                                                 |||
|||  9) withdraw candy machine                                                                                                      |||
|||     ts-node candy-machine-v2-cli.ts withdraw <candy pubkey> -e mainnet-beta  -k seller.json                                     |||
|||                                                                                                                                 |||
|||  10) withdraw_all candy machine                                                                                                 |||
|||     ts-node candy-machine-v2-cli.ts withdraw_all -e mainnet-beta -k seller.json                                                 |||
|||                                                                                                                                 |||
|||  10) sign all NFT                                                                                                               |||
|||     ts-node candy-machine-v2-cli.ts sign_all -e devnet -k seller.json -c cash                                                   |||
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

 ///update candy machine///
ts-node candy-machine-v2-cli.ts update_candy_machine -e mainnet-beta -k seller.json -cp config.json -c cyberbasketball
 ///show candy machine///
ts-node candy-machine-v2-cli.ts show -e mainnet-beta -k seller.json -c cyberbasketball



1. Установка Git-Ftp:
https://habr.com/ru/post/178067/
$ git clone https://github.com/git-ftp/git-ftp
$ cd git-ftp
$ chmod +x git-ftp
$ cp ~/git-ftp/git-ftp /bin/git-ftp

2. Проверка установленного Git-Ftp:
$ cd ~
$ which git-ftp
/bin/git-ftp
$ git-ftp --help

3. Настройка репозитория:
Применение к проекту:
$ cd /c/OpenServer/domains/site-name
$ notepad .git/config

Добавьте в открывшийся config следующее:
[git-ftp "test"]
     user = ваш_ftp_пользователь
     url = 255.165.35.35/www/site-name.com
     password = ваш_ftp_пароль

     url — это Ip-адрес/путь к репозиторию на ftp-сервере
test — название конфига, который будет указывать, на какой ftp-сервер, будут загружаться обновления. Можно указать несколько.

$ git ftp -s test catchup

$ git add .
$ git commit -m "Commit name" -a
$ git ftp -s test push

test — название ftp-конфига, который мы указали в настройках Git'a.

Вот в общем-то и всё. При редактирование файлов повторяйте процедуру из пункта 4, для обновления файлов на сервере.
